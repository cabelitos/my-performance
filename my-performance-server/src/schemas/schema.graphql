scalar Date # ISO String
interface Node {
  id: ID!
}

type PerformanceEntry implements Node {
  id: ID!
  distance: Int!
  energy: Int!
  calories: Int!
  date: Date!
}

type PerformanceEntriesPayload {
  totalCount: Int!
  entries: [PerformanceEntry!]!
}

input CreatePerformanceEntryInput {
  distance: Int!
  energy: Int!
  calories: Int!
  date: Date!
}

type Query {
  node(id: ID!): Node
  performanceEntries(
    start: Date
    end: Date
    first: Int
    skip: Int
  ): PerformanceEntriesPayload!
}

type Mutation {
  createPerformanceEntry(input: CreatePerformanceEntryInput!): PerformanceEntry!
  deletePerformanceEntry(id: ID!): ID!
}
